% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/star_lhs_names.R
\name{star_lhs_names}
\alias{star_lhs_names}
\title{To replace the names of the LHS variables in \code{stargazer} output}
\usage{
star_lhs_names(star, pattern, line1, line2 = NULL, line3 = NULL)
}
\arguments{
\item{star}{the \code{stargazer} output}

\item{pattern}{the regular expression pattern}

\item{line1}{the variable name in the first line}

\item{line2}{the optional variable name in the second line}

\item{line3}{the optional variable name in teh third line}
}
\value{
character vector with stargazer output
with the updated LHS variable names
}
\description{
To replace the names of the RFHS variables in \code{stargazer}.
The function also allows for optional second and third lines
}
\details{
Note: the \code{pattern} and \code{line1} arguments must have
the same length. If \code{line2} and \code{line3} are not \code{NULL},
they must have the same length as \code{pattern} and \code{line1}
}
\examples{
## -- Regression Example -- ##
library(stargazer)
data(mtcars)
mod.mtcars.1 <- lm(mpg ~ hp + wt, mtcars)
mod.mtcars.2 <- lm(mpg ~ hp + wt + cyl, mtcars)
mod.mtcars.3 <- lm(hp ~ wt + cyl, mtcars)
##latex example
star.out <- stargazer(mod.mtcars.1, mod.mtcars.2, mod.mtcars.3,
                      type = "latex")
print(star.out)
##update the LHS variable names using one line only
star.out.1 <- star_lhs_names(star.out,
                             pattern = c("mpg", "hp"),
                             line1 = c("miles per gallon", "horsepower")
                            )
print(star.out.1)
##Sometimes variables can have really long names and
##would be best written on 2 lines
star.out.2 <- star_lhs_names(star.out,
                             pattern = c("mpg", "hp"),
                             line1 = c("miles per", "horse-"),
                             line2 = c("gallon", "power")
                            )
print(star.out.2)
##For this example, three lines might be even better
star.out.3 <- star_lhs_names(star.out,
                             pattern = c("mpg", "hp"),
                             line1 = c("miles", "horse-"),
                             line2 = c("per", "power"),
                             line3 = c("gallon", "")
                            )
print(star.out.3)

##Text Examples
##Note that star_lhs_names() will NOT adjust the
##length of the character elements if the variable names in line1,
##line 2, or line3 are longer than those that they are replacing
star.out <- stargazer(mod.mtcars.1, mod.mtcars.2, mod.mtcars.3,
                      type = "text")
print(star.out)
##update the LHS variable names using one line only
star.out.1 <- star_lhs_names(star.out,
                             pattern = c("mpg", "hp"),
                             line1 = c("miles per gallon", "horsepower")
                            )
print(star.out.1)
##Sometimes variables can have really long names and
##would be best written on 2 lines
star.out.2 <- star_lhs_names(star.out,
                             pattern = c("mpg", "hp"),
                             line1 = c("miles per", "horse-"),
                             line2 = c("gallon", "power")
                            )
print(star.out.2)
##For this example, three lines might be even better
star.out.3 <- star_lhs_names(star.out,
                             pattern = c("mpg", "hp"),
                             line1 = c("miles", "horse-"),
                             line2 = c("per", "power"),
                             line3 = c("gallon", "")
                            )
print(star.out.3)
}

